basePath: /api
definitions:
  api.APIResponse:
    properties:
      data:
        description: Response data for success
      errors:
        description: Error details for failures
      message:
        description: Human-readable message
        type: string
      type:
        description: '"success" or "error"'
        type: string
    type: object
  api.PaginatedResponse:
    properties:
      items: {}
      pagination:
        $ref: '#/definitions/api.Pagination'
    type: object
  api.Pagination:
    properties:
      current_page:
        type: integer
      has_next_page:
        type: boolean
      has_prev_page:
        type: boolean
      per_page:
        type: integer
      total_items:
        type: integer
      total_pages:
        type: integer
    type: object
  api.ProductRequest:
    properties:
      category_id:
        type: string
      description:
        type: string
      name:
        type: string
      price:
        type: number
      sku:
        type: string
    type: object
  api.ProductResponse:
    properties:
      category_id:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      sku:
        type: string
      updated_at:
        type: string
    type: object
  domain.Product:
    properties:
      categoryID:
        type: string
      createdAt:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      sku:
        type: string
      updatedAt:
        type: string
    type: object
  validator.ValidationError:
    properties:
      field:
        type: string
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
    url: http://www.example.com/support
  description: This is the product service API for the microservice architecture
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Product Service API
  version: "1.0"
paths:
  /products:
    get:
      consumes:
      - application/json
      description: List all products
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: perPage
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/api.PaginatedResponse'
            - properties:
                items:
                  items:
                    $ref: '#/definitions/domain.Product'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/api.APIResponse'
            - properties:
                errors:
                  type: string
              type: object
      summary: List all products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Create a new product with the provided details
      parameters:
      - description: Product details
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/api.ProductRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/api.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/api.ProductResponse'
              type: object
        "400":
          description: Validation Error
          schema:
            allOf:
            - $ref: '#/definitions/api.APIResponse'
            - properties:
                errors:
                  items:
                    $ref: '#/definitions/validator.ValidationError'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/api.APIResponse'
            - properties:
                errors:
                  type: string
              type: object
      summary: Create a new product
      tags:
      - products
  /products/{id}:
    get:
      consumes:
      - application/json
      description: Get a product by its UUID
      parameters:
      - description: Product ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/api.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/api.ProductResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/api.APIResponse'
            - properties:
                errors:
                  type: string
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/api.APIResponse'
            - properties:
                errors:
                  type: string
              type: object
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/api.APIResponse'
            - properties:
                errors:
                  type: string
              type: object
      summary: Get a product by ID
      tags:
      - products
schemes:
- http
swagger: "2.0"
